# ==================================
# Variáveis de Ambiente - PrevLab
# ==================================

# Backend Configuration
# ----------------------

# Banco de Dados
# SQLite (default para desenvolvimento e small deployments)
DATABASE_URL=sqlite:///./data/db/prevlab.db

# Para PostgreSQL (recomendado para produção):
# DATABASE_URL=postgresql://user:password@host:port/dbname

# Servidor
LOG_LEVEL=info                          # debug, info, warning, error, critical
WORKERS=1                                # Número de workers Uvicorn (aumentar em produção)
HOST=0.0.0.0                            # Host do servidor
PORT=8000                               # Porta do servidor

# CORS - Origens permitidas (separadas por vírgula)
CORS_ORIGINS=http://localhost:5173,http://localhost:80,http://localhost:3000

# Segurança (produção)
# SECRET_KEY=your-secret-key-here       # Para JWT e sessões (gerar com: openssl rand -hex 32)
# ALLOWED_HOSTS=yourdomain.com          # Hosts permitidos em produção

# Frontend Configuration
# ----------------------

# URL base da API (usado durante o build do frontend)
# Desenvolvimento:
VITE_API_BASE_URL=http://localhost:8000

# Produção (exemplos):
# VITE_API_BASE_URL=https://api.prevlab.com
# VITE_API_BASE_URL=/api                # Se backend e frontend estiverem no mesmo domínio

# Docker Configuration
# --------------------

# Node version
NODE_VERSION=20

# Python version
PYTHON_VERSION=3.11

# ==================================
# Notas de Configuração
# ==================================
#
# 1. DESENVOLVIMENTO LOCAL:
#    - Use os valores padrão acima
#    - Não é necessário criar arquivo .env
#
# 2. DOCKER:
#    - Copie este arquivo para .env
#    - Ajuste DATABASE_URL se usar PostgreSQL
#    - Configure CORS_ORIGINS com suas URLs
#
# 3. RENDER.COM:
#    - Configure as variáveis no dashboard do Render
#    - Use PostgreSQL do Render para DATABASE_URL
#    - CORS_ORIGINS deve incluir a URL do frontend
#
# 4. FLY.IO:
#    - Use `fly secrets set KEY=VALUE`
#    - Configure volumes para persistir SQLite
#
# 5. VPS/SELF-HOSTED:
#    - Crie arquivo .env na raiz do projeto
#    - Use PostgreSQL ou MySQL para produção
#    - Configure SECRET_KEY para segurança
#    - Use nginx/caddy como reverse proxy
#
# ==================================
